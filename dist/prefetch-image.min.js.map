{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///prefetch-image.min.js","webpack:///webpack/bootstrap a61390f05df6fc5473c9","webpack:///./~/url-join/lib/url-join.js","webpack:///./index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","_typeof","Symbol","iterator","obj","constructor","context","definition","undefined","startsWith","str","searchString","substr","length","normalize","options","replace","input","arguments","slice","join","prefetchImages","images","console","error","Promise","reject","Array","isArray","prefetchImageEachDomain","domainPromises","domainKeys","keys","domain","push","joinUrls","all","then","results","debug","info","resolve","catch","err","concurrency","imageLoadingInfo","start","end","iterations","Math","ceil","imagesContainer","bulkImagePromises","loadImages","addAllImagesToDOM","location","origin","imagePromises","allImageLength","src","loadImage","container","img","Image","onload","onerror","imageElements","body","document","querySelector","imagesWrapper","createElement","setAttribute","random","style","width","height","overflow","display","forEach","appendChild","urls","newUrls","url","_urlJoin2","default","_urlJoin"],"mappings":"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","file":"prefetch-image.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"prefetchImages\"] = factory();\n\telse\n\t\troot[\"prefetchImages\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"prefetchImages\"] = factory();\n\telse\n\t\troot[\"prefetchImages\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();else if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else context[name] = definition();\n})('urljoin', undefined, function () {\n\n  function startsWith(str, searchString) {\n    return str.substr(0, searchString.length) === searchString;\n  }\n\n  function normalize(str, options) {\n\n    if (startsWith(str, 'file://')) {\n\n      // make sure file protocol has max three slashes\n      str = str.replace(/(\\/{0,3})\\/*/g, '$1');\n    } else {\n\n      // make sure protocol is followed by two slashes\n      str = str.replace(/:\\//g, '://');\n\n      // remove consecutive slashes\n      str = str.replace(/([^:\\s%3A])\\/+/g, '$1/');\n    }\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    str = str.replace(/(\\?.+)\\?/g, '$1&');\n\n    return str;\n  }\n\n  return function () {\n    var input = arguments;\n    var options = {};\n\n    if (_typeof(arguments[0]) === 'object') {\n      // new syntax with array and options\n      input = arguments[0];\n      options = arguments[1] || {};\n    }\n\n    var joined = [].slice.call(input, 0).join('/');\n    return normalize(joined, options);\n  };\n});\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*!\n * @license MIT\n * Prefetch all images for your web app, especially for mobile/h5 promotion pages.\n * https://github.com/JasonBoy/prefetch-image\n */\n\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _urlJoin = __webpack_require__(0);\n\nvar _urlJoin2 = _interopRequireDefault(_urlJoin);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Preload all images\n * @param {Array|object} images, use object if your images are on different domains\n * object:\n * {\n *   \"http://domain1.com\": ['/image1.png', '/image2.png'],\n *   \"http://domain2.com\": ['/image3.png', '/image4.png'],\n * }\n * @param {object=} options\n * @return {Promise}\n */\nfunction prefetchImages(images) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!images) {\n    console.error('[prefetch-image]: images not provided, pls pass images in Array or object!');\n    return Promise.reject({});\n  }\n  var isArray = Array.isArray(images);\n  if (isArray) {\n    return prefetchImageEachDomain(images, options);\n  }\n  var domainPromises = [];\n  var domainKeys = Object.keys(images);\n  var i = 0;\n  for (; i < domainKeys.length; i++) {\n    var domain = domainKeys[i];\n    domainPromises.push(prefetchImageEachDomain(joinUrls(domain, images[domain]), options, domain));\n  }\n  return Promise.all(domainPromises).then(function (results) {\n    options.debug && console.info('[prefetch-image]: Images loaded for all domains!');\n    return Promise.resolve(results);\n  }).catch(function (err) {\n    console.error('[prefetch-image]: ', err);\n    return Promise.reject(null);\n  });\n}\n\n/**\n * Preload all images in the same domain\n * @param {Array} images all image urls in the same domain\n * @param {object=} options\n * @param {string=} domain current domain\n * @return {Promise}\n */\nfunction prefetchImageEachDomain(images, options, domain) {\n  var concurrency = options.concurrency || 6;\n  var imageLoadingInfo = {\n    start: 0,\n    end: 0,\n    //how many images for each iteration\n    //e.g. 15 images total, 6 images max each time, result: 6, 6, 3, iterateCount will be 3\n    concurrency: concurrency,\n    iterations: Math.ceil(images.length / concurrency),\n    imagesContainer: []\n  };\n  var bulkImagePromises = []; //length equals to \"iterations\"\n  var i = 0;\n  for (; i < imageLoadingInfo.iterations; i++) {\n    bulkImagePromises.push(loadImages(images, imageLoadingInfo));\n  }\n  // console.log('bulkImagePromisesLength: %d', bulkImagePromises.length);\n  return Promise.all(bulkImagePromises).then(function () {\n    addAllImagesToDOM(imageLoadingInfo.imagesContainer);\n    options.debug && console.info('[prefetch-image]: Images loaded for domain [' + (domain || location.origin) + '], length [' + images.length + ']');\n    return Promise.resolve(imageLoadingInfo.imagesContainer);\n  }).catch(function (err) {\n    console.error('[prefetch-image]: ', err);\n    return Promise.reject(imageLoadingInfo.imagesContainer);\n  });\n}\n\n/**\n * Load images on an array\n * @param {Array} images\n * @param {object} imageLoadingInfo info about this phase of loading\n * @return {Promise}\n */\nfunction loadImages(images, imageLoadingInfo) {\n  var imagePromises = [];\n  var allImageLength = images.length;\n  var info = imageLoadingInfo;\n  if (info.start >= allImageLength) {\n    return Promise.resolve([]);\n  }\n  var start = info.start;\n  var end = start + info.concurrency;\n  // console.log(`${start} - ${end}`);\n  var i = start;\n  for (; i < end; i++) {\n    var src = images[i];\n    if (!src) continue;\n    imagePromises.push(loadImage(src, info.imagesContainer));\n  }\n  info.start = end;\n  info.end = end + info.concurrency;\n  // console.log('imagePromises: ', imagePromises.length);\n\n  return Promise.all(imagePromises);\n}\n\n/**\n * Start loading every single image\n * @param {string} src image src\n * @param {array} container new Image instance will be added to this container\n * @return {Promise}\n */\nfunction loadImage(src, container) {\n  // console.log('--> start loading img: %s', src);\n  return new Promise(function (resolve) {\n    var img = new Image();\n    img.onload = function () {\n      // console.log(`src: ${src}`);\n      resolve(src);\n    };\n    img.onerror = function () {\n      console.error('[prefetch-image]: \"' + src + '\" failed');\n      //still resolve even if some image failed loading\n      resolve(src);\n    };\n    img.src = src;\n    container.push(img);\n  });\n}\n\n/**\n * Add all images loaded to dom to ensure cache\n * @param {Array} imageElements Image objects in an array\n */\nfunction addAllImagesToDOM(imageElements) {\n  var body = document.querySelector('body');\n  var imagesWrapper = document.createElement('div');\n  imagesWrapper.setAttribute('class', 'prefetch-image-wrapper_' + Math.random());\n  imagesWrapper.style.width = 0;\n  imagesWrapper.style.height = 0;\n  imagesWrapper.style.overflow = 'hidden';\n  // imagesWrapper.style.opacity = 0;\n  imagesWrapper.style.display = 'none';\n  imageElements.forEach(function (img) {\n    imagesWrapper.appendChild(img);\n  });\n  body.appendChild(imagesWrapper);\n}\n\n/**\n * Join domain for urls\n * @param {string} domain\n * @param {array} urls url paths\n * @return {Array}\n */\nfunction joinUrls(domain, urls) {\n  var newUrls = [];\n  urls.forEach(function (url) {\n    newUrls.push((0, _urlJoin2.default)(domain, url));\n  });\n  return newUrls;\n}\n\nexports.default = prefetchImages;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// prefetch-image.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a61390f05df6fc5473c9","(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define === 'function' && define.amd) define(definition);\n  else context[name] = definition();\n})('urljoin', this, function () {\n\n  function startsWith(str, searchString) {\n    return str.substr(0, searchString.length) === searchString;\n  }\n\n  function normalize (str, options) {\n\n    if (startsWith(str, 'file://')) {\n\n      // make sure file protocol has max three slashes\n      str = str.replace(/(\\/{0,3})\\/*/g, '$1');\n    } else {\n\n      // make sure protocol is followed by two slashes\n      str = str.replace(/:\\//g, '://');\n\n      // remove consecutive slashes\n      str = str.replace(/([^:\\s%3A])\\/+/g, '$1/');\n    }\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    str = str.replace(/(\\?.+)\\?/g, '$1&');\n\n    return str;\n  }\n\n  return function () {\n    var input = arguments;\n    var options = {};\n\n    if (typeof arguments[0] === 'object') {\n      // new syntax with array and options\n      input = arguments[0];\n      options = arguments[1] || {};\n    }\n\n    var joined = [].slice.call(input, 0).join('/');\n    return normalize(joined, options);\n  };\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./~/url-join/lib/url-join.js","/*!\n * @license MIT\n * Prefetch all images for your web app, especially for mobile/h5 promotion pages.\n * https://github.com/JasonBoy/prefetch-image\n */\n\n'use strict';\n\nimport joinUrl from 'url-join';\n\n/**\n * Preload all images\n * @param {Array|object} images, use object if your images are on different domains\n * object:\n * {\n *   \"http://domain1.com\": ['/image1.png', '/image2.png'],\n *   \"http://domain2.com\": ['/image3.png', '/image4.png'],\n * }\n * @param {object=} options\n * @return {Promise}\n */\nfunction prefetchImages(images, options = {}) {\n  if(!images) {\n    console.error('[prefetch-image]: images not provided, pls pass images in Array or object!');\n    return Promise.reject({});\n  }\n  const isArray = Array.isArray(images);\n  if(isArray) {\n    return prefetchImageEachDomain(images, options);\n  }\n  const domainPromises = [];\n  const domainKeys = Object.keys(images);\n  let i =0;\n  for(; i < domainKeys.length; i++) {\n    const domain = domainKeys[i];\n    domainPromises.push(\n      prefetchImageEachDomain(\n        joinUrls(domain, images[domain]),\n        options,\n        domain\n      )\n    );\n  }\n  return Promise.all(domainPromises)\n    .then((results) => {\n      options.debug && console.info('[prefetch-image]: Images loaded for all domains!');\n      return Promise.resolve(results);\n    })\n    .catch((err) => {\n      console.error('[prefetch-image]: ', err);\n      return Promise.reject(null);\n    })\n    ;\n}\n\n/**\n * Preload all images in the same domain\n * @param {Array} images all image urls in the same domain\n * @param {object=} options\n * @param {string=} domain current domain\n * @return {Promise}\n */\nfunction prefetchImageEachDomain (images, options, domain) {\n  const concurrency = options.concurrency || 6;\n  const imageLoadingInfo = {\n    start: 0,\n    end: 0,\n    //how many images for each iteration\n    //e.g. 15 images total, 6 images max each time, result: 6, 6, 3, iterateCount will be 3\n    concurrency,\n    iterations: Math.ceil(images.length / concurrency),\n    imagesContainer: [],\n  };\n  const bulkImagePromises = []; //length equals to \"iterations\"\n  let i = 0;\n  for (; i < imageLoadingInfo.iterations; i++) {\n    bulkImagePromises.push(loadImages(images, imageLoadingInfo));\n  }\n  // console.log('bulkImagePromisesLength: %d', bulkImagePromises.length);\n  return Promise.all(bulkImagePromises)\n    .then(() => {\n      addAllImagesToDOM(imageLoadingInfo.imagesContainer);\n      options.debug && console.info(`[prefetch-image]: Images loaded for domain [${domain || location.origin}], length [${images.length}]`);\n      return Promise.resolve(imageLoadingInfo.imagesContainer);\n    })\n    .catch((err) => {\n      console.error('[prefetch-image]: ', err);\n      return Promise.reject(imageLoadingInfo.imagesContainer);\n    });\n}\n\n/**\n * Load images on an array\n * @param {Array} images\n * @param {object} imageLoadingInfo info about this phase of loading\n * @return {Promise}\n */\nfunction loadImages(images, imageLoadingInfo) {\n  const imagePromises = [];\n  const allImageLength = images.length;\n  const info = imageLoadingInfo;\n  if (info.start >= allImageLength) {\n    return Promise.resolve([]);\n  }\n  const start = info.start;\n  const end = start + info.concurrency;\n  // console.log(`${start} - ${end}`);\n  let i = start;\n  for (; i < end; i++) {\n    const src = images[i];\n    if (!src) continue;\n    imagePromises.push(loadImage(src, info.imagesContainer));\n  }\n  info.start = end;\n  info.end = end + info.concurrency;\n  // console.log('imagePromises: ', imagePromises.length);\n\n  return Promise.all(imagePromises);\n}\n\n/**\n * Start loading every single image\n * @param {string} src image src\n * @param {array} container new Image instance will be added to this container\n * @return {Promise}\n */\nfunction loadImage(src, container) {\n  // console.log('--> start loading img: %s', src);\n  return new Promise((resolve) => {\n    const img = new Image();\n    img.onload = () => {\n      // console.log(`src: ${src}`);\n      resolve(src);\n    };\n    img.onerror = () => {\n      console.error(`[prefetch-image]: \"${src}\" failed`);\n      //still resolve even if some image failed loading\n      resolve(src);\n    };\n    img.src = src;\n    container.push(img);\n  });\n}\n\n/**\n * Add all images loaded to dom to ensure cache\n * @param {Array} imageElements Image objects in an array\n */\nfunction addAllImagesToDOM(imageElements) {\n  const body = document.querySelector('body');\n  const imagesWrapper = document.createElement('div');\n  imagesWrapper.setAttribute('class', `prefetch-image-wrapper_${Math.random()}`);\n  imagesWrapper.style.width = 0;\n  imagesWrapper.style.height = 0;\n  imagesWrapper.style.overflow = 'hidden';\n  // imagesWrapper.style.opacity = 0;\n  imagesWrapper.style.display = 'none';\n  imageElements.forEach((img) => {\n    imagesWrapper.appendChild(img);\n  });\n  body.appendChild(imagesWrapper);\n}\n\n/**\n * Join domain for urls\n * @param {string} domain\n * @param {array} urls url paths\n * @return {Array}\n */\nfunction joinUrls (domain, urls) {\n  const newUrls = [];\n  urls.forEach((url) => {\n    newUrls.push(joinUrl(domain, url));\n  });\n  return newUrls;\n}\n\nexport default prefetchImages;\n\n\n// WEBPACK FOOTER //\n// ./index.js"],"sourceRoot":""}