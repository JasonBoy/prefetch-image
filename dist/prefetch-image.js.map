{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 97754a850812ae293d4d","webpack:///./~/url-join/lib/url-join.js","webpack:///./index.js"],"names":["name","context","definition","module","exports","startsWith","str","searchString","substr","length","normalize","options","replace","input","arguments","joined","slice","call","join","prefetchImages","images","console","error","Promise","reject","isArray","Array","prefetchImageEachDomain","domainPromises","domainKeys","Object","keys","i","domain","push","joinUrls","all","then","results","debug","info","resolve","catch","err","concurrency","imageLoadingInfo","start","end","iterations","Math","ceil","imagesContainer","bulkImagePromises","loadImages","addAllImagesToDOM","location","origin","imagePromises","allImageLength","src","loadImage","container","img","Image","onload","onerror","imageElements","body","document","querySelector","imagesWrapper","createElement","setAttribute","random","style","width","height","overflow","display","forEach","appendChild","urls","newUrls","url"],"mappings":"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","file":"prefetch-image.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"prefetchImages\"] = factory();\n\telse\n\t\troot[\"prefetchImages\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 97754a850812ae293d4d","(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define === 'function' && define.amd) define(definition);\n  else context[name] = definition();\n})('urljoin', this, function () {\n\n  function startsWith(str, searchString) {\n    return str.substr(0, searchString.length) === searchString;\n  }\n\n  function normalize (str, options) {\n\n    if (startsWith(str, 'file://')) {\n\n      // make sure file protocol has max three slashes\n      str = str.replace(/(\\/{0,3})\\/*/g, '$1');\n    } else {\n\n      // make sure protocol is followed by two slashes\n      str = str.replace(/:\\//g, '://');\n\n      // remove consecutive slashes\n      str = str.replace(/([^:\\s%3A])\\/+/g, '$1/');\n    }\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    str = str.replace(/(\\?.+)\\?/g, '$1&');\n\n    return str;\n  }\n\n  return function () {\n    var input = arguments;\n    var options = {};\n\n    if (typeof arguments[0] === 'object') {\n      // new syntax with array and options\n      input = arguments[0];\n      options = arguments[1] || {};\n    }\n\n    var joined = [].slice.call(input, 0).join('/');\n    return normalize(joined, options);\n  };\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./~/url-join/lib/url-join.js","/*!\n * @license MIT\n * Prefetch all images for your web app, especially for mobile/h5 promotion pages.\n * https://github.com/JasonBoy/prefetch-image\n */\n\n'use strict';\n\nimport joinUrl from 'url-join';\n\n/**\n * Preload all images\n * @param {Array|object} images, use object if your images are on different domains\n * object:\n * {\n *   \"http://domain1.com\": ['/image1.png', '/image2.png'],\n *   \"http://domain2.com\": ['/image3.png', '/image4.png'],\n * }\n * @param {object=} options\n * @return {Promise}\n */\nfunction prefetchImages(images, options = {}) {\n  if(!images) {\n    console.error('[prefetch-image]: images not provided, pls pass images in Array or object!');\n    return Promise.reject({});\n  }\n  const isArray = Array.isArray(images);\n  if(isArray) {\n    return prefetchImageEachDomain(images, options);\n  }\n  const domainPromises = [];\n  const domainKeys = Object.keys(images);\n  let i =0;\n  for(; i < domainKeys.length; i++) {\n    const domain = domainKeys[i];\n    domainPromises.push(\n      prefetchImageEachDomain(\n        joinUrls(domain, images[domain]),\n        options,\n        domain\n      )\n    );\n  }\n  return Promise.all(domainPromises)\n    .then((results) => {\n      options.debug && console.info('[prefetch-image]: Images loaded for all domains!');\n      return Promise.resolve(results);\n    })\n    .catch((err) => {\n      console.error('[prefetch-image]: ', err);\n      return Promise.reject(null);\n    })\n    ;\n}\n\n/**\n * Preload all images in the same domain\n * @param {Array} images all image urls in the same domain\n * @param {object=} options\n * @param {string=} domain current domain\n * @return {Promise}\n */\nfunction prefetchImageEachDomain (images, options, domain) {\n  const concurrency = options.concurrency || 6;\n  const imageLoadingInfo = {\n    start: 0,\n    end: 0,\n    //how many images for each iteration\n    //e.g. 15 images total, 6 images max each time, result: 6, 6, 3, iterateCount will be 3\n    concurrency,\n    iterations: Math.ceil(images.length / concurrency),\n    imagesContainer: [],\n  };\n  const bulkImagePromises = []; //length equals to \"iterations\"\n  let i = 0;\n  for (; i < imageLoadingInfo.iterations; i++) {\n    bulkImagePromises.push(loadImages(images, imageLoadingInfo));\n  }\n  // console.log('bulkImagePromisesLength: %d', bulkImagePromises.length);\n  return Promise.all(bulkImagePromises)\n    .then(() => {\n      addAllImagesToDOM(imageLoadingInfo.imagesContainer);\n      options.debug && console.info(`[prefetch-image]: Images loaded for domain [${domain || location.origin}], length [${images.length}]`);\n      return Promise.resolve(imageLoadingInfo.imagesContainer);\n    })\n    .catch((err) => {\n      console.error('[prefetch-image]: ', err);\n      return Promise.reject(imageLoadingInfo.imagesContainer);\n    });\n}\n\n/**\n * Load images on an array\n * @param {Array} images\n * @param {object} imageLoadingInfo info about this phase of loading\n * @return {Promise}\n */\nfunction loadImages(images, imageLoadingInfo) {\n  const imagePromises = [];\n  const allImageLength = images.length;\n  const info = imageLoadingInfo;\n  if (info.start >= allImageLength) {\n    return Promise.resolve([]);\n  }\n  const start = info.start;\n  const end = start + info.concurrency;\n  // console.log(`${start} - ${end}`);\n  let i = start;\n  for (; i < end; i++) {\n    const src = images[i];\n    if (!src) continue;\n    imagePromises.push(loadImage(src, info.imagesContainer));\n  }\n  info.start = end;\n  info.end = end + info.concurrency;\n  // console.log('imagePromises: ', imagePromises.length);\n\n  return Promise.all(imagePromises);\n}\n\n/**\n * Start loading every single image\n * @param {string} src image src\n * @param {array} container new Image instance will be added to this container\n * @return {Promise}\n */\nfunction loadImage(src, container) {\n  // console.log('--> start loading img: %s', src);\n  return new Promise((resolve) => {\n    const img = new Image();\n    img.onload = () => {\n      // console.log(`src: ${src}`);\n      resolve(src);\n    };\n    img.onerror = () => {\n      console.error(`[prefetch-image]: \"${src}\" failed`);\n      //still resolve even if some image failed loading\n      resolve(src);\n    };\n    img.src = src;\n    container.push(img);\n  });\n}\n\n/**\n * Add all images loaded to dom to ensure cache\n * @param {Array} imageElements Image objects in an array\n */\nfunction addAllImagesToDOM(imageElements) {\n  const body = document.querySelector('body');\n  const imagesWrapper = document.createElement('div');\n  imagesWrapper.setAttribute('class', `prefetch-image-wrapper_${Math.random()}`);\n  imagesWrapper.style.width = 0;\n  imagesWrapper.style.height = 0;\n  imagesWrapper.style.overflow = 'hidden';\n  // imagesWrapper.style.opacity = 0;\n  imagesWrapper.style.display = 'none';\n  imageElements.forEach((img) => {\n    imagesWrapper.appendChild(img);\n  });\n  body.appendChild(imagesWrapper);\n}\n\n/**\n * Join domain for urls\n * @param {string} domain\n * @param {array} urls url paths\n * @return {Array}\n */\nfunction joinUrls (domain, urls) {\n  const newUrls = [];\n  urls.forEach((url) => {\n    newUrls.push(joinUrl(domain, url));\n  });\n  return newUrls;\n}\n\nexport default prefetchImages;\n\n\n// WEBPACK FOOTER //\n// ./index.js"],"sourceRoot":""}